*  MPEC written by GAMS Convert at 06/01/19 13:56:34
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*          8        2        3        0        3        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         12       12        0        0        0        0        0        0
*  FX      6        6        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*         74        8       66        0
*
*  Solve m using MPEC maximizing x1;

*
* WARNING: bounds on matched variables CANNOT BE CHANGED
*

* Reformulation parameters, after checking for consistency.
* Reform Type        SINGLE      DOUBLE
*  refType             mult        mult
*  slack           positive    positive
*  constraint      equality    equality
*  aggregate           none        none
*  NCPBounds           none        none



Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12;

Positive Variables  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12;

Equations  e1,e2,e3,e4,e5,e6,e7,e8;
Positive Variable  S3 matches x12;
Positive Variable  S4 matches x2;
Positive Variable  S5 matches x3;

Scalars S    level value of function at current point
        SLO  min level for S   / 0 /
        SUP  min level for S   / +inf /
        muS  single bounded MU / 0.0 /
        muD  double bounded MU / 0.0 /;

* MUs will be reset just before the solve


e1.. -(2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 
     14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6)) + x1 =E= 0;

e2..    x7 + x8 + x9 + x10 + x11 =E= 1;

e3.. (6.132 - 0.876*x4 + 0.876*x5)*(1.2 - 0.00329218106995885*x3)
      + 1.08410541705717*x2 =E= 11.5674048 + S3;

e4.. -((23.1348096 - 2.16821083411434*x2 + 4.69417645585755*x4)/(1 + exp(-(
     2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 
     14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6)))) - 2.8116213683224*exp(-(
     2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 
     14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6)))*x7/sqr(1 + exp(-(
     2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 
     14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6))))*((-10.67 + x2 - 4.33*x4)*
     (11.5674048 - 1.08410541705717*x2) - (72.9 + 115.1*x4 + 0.05*x5 + 0.05*x6)
     *(1.2 - 0.00329218106995885*x3) + x3)) - 1.08410541705717*x12 =E= 0 + S4;

e5.. (0.0201876543209876 - 0.00288395061728395*x4 + 0.00288395061728395*x5)*x12
      - ((1.24 + 0.378930041152264*x4 + 0.000164609053497943*x5 + 
     0.000164609053497943*x6)/(1 + exp(-(2.8116213683224*x7*(10.67 - x2) + 
     0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - x5) - 
     12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(4.28571428571429
      - x6)))) - 0.411522633744856*exp(-(2.8116213683224*x7*(10.67 - x2) + 
     0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - x5) - 
     12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(4.28571428571429
      - x6)))*x8/sqr(1 + exp(-(2.8116213683224*x7*(10.67 - x2) + 
     0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - x5) - 
     12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(4.28571428571429
      - x6))))*((-10.67 + x2 - 4.33*x4)*(11.5674048 - 1.08410541705717*x2) - (
     72.9 + 115.1*x4 + 0.05*x5 + 0.05*x6)*(1.2 - 0.00329218106995885*x3) + x3))
      =E= 0 + S5;

e6.. (1.0512 - 0.00288395061728395*x3)*x12 - ((-188.206862784 + 
     4.69417645585755*x2 + 0.378930041152264*x3)/(1 + exp(-(2.8116213683224*x7*
     (10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(
     0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(
     4.28571428571429 - x6)))) + 12.9099444873581*exp(-(2.8116213683224*x7*(
     10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(
     0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(
     4.28571428571429 - x6)))*x9/sqr(1 + exp(-(2.8116213683224*x7*(10.67 - x2)
      + 0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - x5) - 
     12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(4.28571428571429
      - x6))))*((-10.67 + x2 - 4.33*x4)*(11.5674048 - 1.08410541705717*x2) - (
     72.9 + 115.1*x4 + 0.05*x5 + 0.05*x6)*(1.2 - 0.00329218106995885*x3) + x3))
      =N= 0;

e7.. (-1.0512 + 0.00288395061728395*x3)*x12 - (14.9071198499986*exp(-(
     2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 
     14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6)))*x10/sqr(1 + exp(-(
     2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - x3) - 
     14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6))))*((-10.67 + x2 - 4.33*x4)*
     (11.5674048 - 1.08410541705717*x2) - (72.9 + 115.1*x4 + 0.05*x5 + 0.05*x6)
     *(1.2 - 0.00329218106995885*x3) + x3) - (0.06 - 0.000164609053497943*x3)/(
     1 + exp(-(2.8116213683224*x7*(10.67 - x2) + 0.411522633744856*x8*(72.9 - 
     x3) - 14.9071198499986*x10*(0.75 - x5) - 12.9099444873581*x9*(0.2 - x4) - 
     0.782623792124926*x11*(4.28571428571429 - x6))))) =N= 0;

e8.. -(0.782623792124926*exp(-(2.8116213683224*x7*(10.67 - x2) + 
     0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - x5) - 
     12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(4.28571428571429
      - x6)))*x11/sqr(1 + exp(-(2.8116213683224*x7*(10.67 - x2) + 
     0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - x5) - 
     12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(4.28571428571429
      - x6))))*((-10.67 + x2 - 4.33*x4)*(11.5674048 - 1.08410541705717*x2) - (
     72.9 + 115.1*x4 + 0.05*x5 + 0.05*x6)*(1.2 - 0.00329218106995885*x3) + x3)
      - (0.06 - 0.000164609053497943*x3)/(1 + exp(-(2.8116213683224*x7*(10.67
      - x2) + 0.411522633744856*x8*(72.9 - x3) - 14.9071198499986*x10*(0.75 - 
     x5) - 12.9099444873581*x9*(0.2 - x4) - 0.782623792124926*x11*(
     4.28571428571429 - x6))))) =N= 0;

Equation CS3 matches x12;
   CS3.. S3*(x12 - 0) =E= muS ;
Equation CS4 matches x2;
   CS4.. S4*(x2 - 0) =E= muS ;
Equation CS5 matches x3;
   CS5.. S5*(x3 - 0) =E= muS ;

* set non default bounds

x4.fx = 0;
x5.fx = 0;
x6.fx = 0;
x9.fx = 0;
x10.fx = 0;
x11.fx = 0;

* touch all variables

x1.l = 0;
x2.l = 0;
x3.l = 0;
x4.l = 0;
x5.l = 0;
x6.l = 0;
x7.l = 0;
x8.l = 0;
x9.l = 0;
x10.l = 0;
x11.l = 0;
x12.l = 0;

S = (6.132 - 0.876*x4.l + 0.876*x5.l)*(1.2 - 0.00329218106995885*x3.l)
    + 1.08410541705717*x2.l - 11.5674048;
S3.L = max(SLO,S);
S = -((23.1348096 - 2.16821083411434*x2.l + 4.69417645585755*x4.l)/(1 + exp(-(
   2.8116213683224*x7.l*(10.67 - x2.l) + 0.411522633744856*x8.l*(72.9 - x3.l)
    - 14.9071198499986*x10.l*(0.75 - x5.l) - 12.9099444873581*x9.l*(0.2 - x4.l)
    - 0.782623792124926*x11.l*(4.28571428571429 - x6.l)))) - 2.8116213683224*
   exp(-(2.8116213683224*x7.l*(10.67 - x2.l) + 0.411522633744856*x8.l*(72.9 - 
   x3.l) - 14.9071198499986*x10.l*(0.75 - x5.l) - 12.9099444873581*x9.l*(0.2 - 
   x4.l) - 0.782623792124926*x11.l*(4.28571428571429 - x6.l)))*x7.l/sqr(1 + 
   exp(-(2.8116213683224*x7.l*(10.67 - x2.l) + 0.411522633744856*x8.l*(72.9 - 
   x3.l) - 14.9071198499986*x10.l*(0.75 - x5.l) - 12.9099444873581*x9.l*(0.2 - 
   x4.l) - 0.782623792124926*x11.l*(4.28571428571429 - x6.l))))*((-10.67 + x2.l
    - 4.33*x4.l)*(11.5674048 - 1.08410541705717*x2.l) - (72.9 + 115.1*x4.l + 
   0.05*x5.l + 0.05*x6.l)*(1.2 - 0.00329218106995885*x3.l) + x3.l))
    - 1.08410541705717*x12.l;
S4.L = max(SLO,S);
S = (0.0201876543209876 - 0.00288395061728395*x4.l + 0.00288395061728395*x5.l)*
   x12.l - ((1.24 + 0.378930041152264*x4.l + 0.000164609053497943*x5.l + 
   0.000164609053497943*x6.l)/(1 + exp(-(2.8116213683224*x7.l*(10.67 - x2.l) + 
   0.411522633744856*x8.l*(72.9 - x3.l) - 14.9071198499986*x10.l*(0.75 - x5.l)
    - 12.9099444873581*x9.l*(0.2 - x4.l) - 0.782623792124926*x11.l*(
   4.28571428571429 - x6.l)))) - 0.411522633744856*exp(-(2.8116213683224*x7.l*(
   10.67 - x2.l) + 0.411522633744856*x8.l*(72.9 - x3.l) - 14.9071198499986*
   x10.l*(0.75 - x5.l) - 12.9099444873581*x9.l*(0.2 - x4.l) - 0.782623792124926
   *x11.l*(4.28571428571429 - x6.l)))*x8.l/sqr(1 + exp(-(2.8116213683224*x7.l*(
   10.67 - x2.l) + 0.411522633744856*x8.l*(72.9 - x3.l) - 14.9071198499986*
   x10.l*(0.75 - x5.l) - 12.9099444873581*x9.l*(0.2 - x4.l) - 0.782623792124926
   *x11.l*(4.28571428571429 - x6.l))))*((-10.67 + x2.l - 4.33*x4.l)*(11.5674048
    - 1.08410541705717*x2.l) - (72.9 + 115.1*x4.l + 0.05*x5.l + 0.05*x6.l)*(1.2
    - 0.00329218106995885*x3.l) + x3.l));
S5.L = max(SLO,S);

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

m.optfile    = 0;

option DNLP=CONOPT;

muS = 0;
muD = 0;

Solve m using DNLP maximizing x1;
