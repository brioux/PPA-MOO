*  MPEC written by GAMS Convert at 09/30/19 09:05:47
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*          8        3        5        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         12       12        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*         70       10       60        0
*
*  Solve m using MPEC maximizing x1;

*
* WARNING: bounds on matched variables CANNOT BE CHANGED
*

* Reformulation parameters, after checking for consistency.
* Reform Type        SINGLE      DOUBLE
*  refType             mult        mult
*  slack           positive    positive
*  constraint      equality    equality
*  aggregate           none        none
*  NCPBounds           none        none



Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12;

Positive Variables  x2,x3,x4,x5,x6;

Equations  e1,e2,e3,e4,e5,e6,e7,e8;
Positive Variable  S4 matches x2;
Positive Variable  S5 matches x3;
Positive Variable  S6 matches x4;
Positive Variable  S7 matches x5;
Positive Variable  S8 matches x6;

Scalars S    level value of function at current point
        SLO  min level for S   / 0 /
        SUP  min level for S   / +inf /
        muS  single bounded MU / 0.0 /
        muD  double bounded MU / 0.0 /;

* MUs will be reset just before the solve


e1.. -(1.21373953149654*x7*(12.844 - x2) + 0.0740740740740741*x8*(258 - x3) - 
     14.9071285888912*x10*(0.75 - x5) - 12.9098889749548*x9*(0.2 - x4) - 
     0.782623871749861*x11*(4.285714 - x6)) + x1 =E= 0;

e2..    x7 + x8 + x9 + x10 + x11 =E= 1;

e3..  - 1.083*x2 + 0.005690496*x3 =E= -5.8966;

e4.. -((18.67 - 2.166*x2 + 5.415*x4)/(1 + exp(-(1.21373953149654*x7*(12.844 - 
     x2) + 0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5)
      - 12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6))
     )) - 1.21373953149654*exp(-(1.21373953149654*x7*(12.844 - x2) + 
     0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 
     12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6)))*
     x7/sqr(1 + exp(-(1.21373953149654*x7*(12.844 - x2) + 0.0740740740740741*x8
     *(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 12.9098889749548*x9*(0.2
      - x4) - 0.782623871749861*x11*(4.285714 - x6))))*((-5 + x2 - 5*x4)*(
     13.255 - 1.083*x2) - (188 + 62*x4)*(1.2 - 0.000928*x3) + x3)) + 1.083*x12
      =E= 0 + S4;

e5.. -((1.174464 + 0.057536*x4)/(1 + exp(-(1.21373953149654*x7*(12.844 - x2) + 
     0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 
     12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6))))
      - 0.0740740740740741*exp(-(1.21373953149654*x7*(12.844 - x2) + 
     0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 
     12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6)))*
     x8/sqr(1 + exp(-(1.21373953149654*x7*(12.844 - x2) + 0.0740740740740741*x8
     *(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 12.9098889749548*x9*(0.2
      - x4) - 0.782623871749861*x11*(4.285714 - x6))))*((-5 + x2 - 5*x4)*(
     13.255 - 1.083*x2) - (188 + 62*x4)*(1.2 - 0.000928*x3) + x3))
      - 0.005690496*x12 =E= 0 + S5;

e6.. -((-140.675 + 5.415*x2 + 0.057536*x3)/(1 + exp(-(1.21373953149654*x7*(
     12.844 - x2) + 0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(
     0.75 - x5) - 12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(
     4.285714 - x6)))) + 12.9098889749548*exp(-(1.21373953149654*x7*(12.844 - 
     x2) + 0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5)
      - 12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6))
     )*x9/sqr(1 + exp(-(1.21373953149654*x7*(12.844 - x2) + 0.0740740740740741*
     x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 12.9098889749548*x9*(
     0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6))))*((-5 + x2 - 5*x4)*(
     13.255 - 1.083*x2) - (188 + 62*x4)*(1.2 - 0.000928*x3) + x3)) =E= 0 + S6;

e7.. -14.9071285888912*exp(-(1.21373953149654*x7*(12.844 - x2) + 
     0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 
     12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6)))*
     x10/sqr(1 + exp(-(1.21373953149654*x7*(12.844 - x2) + 0.0740740740740741*
     x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 12.9098889749548*x9*(
     0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6))))*((-5 + x2 - 5*x4)*(
     13.255 - 1.083*x2) - (188 + 62*x4)*(1.2 - 0.000928*x3) + x3) =E= 0 + S7;

e8.. -0.782623871749861*exp(-(1.21373953149654*x7*(12.844 - x2) + 
     0.0740740740740741*x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 
     12.9098889749548*x9*(0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6)))*
     x11/sqr(1 + exp(-(1.21373953149654*x7*(12.844 - x2) + 0.0740740740740741*
     x8*(258 - x3) - 14.9071285888912*x10*(0.75 - x5) - 12.9098889749548*x9*(
     0.2 - x4) - 0.782623871749861*x11*(4.285714 - x6))))*((-5 + x2 - 5*x4)*(
     13.255 - 1.083*x2) - (188 + 62*x4)*(1.2 - 0.000928*x3) + x3) =E= 0 + S8;

Equation CS4 matches x2;
   CS4.. S4*(x2 - 0) =E= muS ;
Equation CS5 matches x3;
   CS5.. S5*(x3 - 0) =E= muS ;
Equation CS6 matches x4;
   CS6.. S6*(x4 - 0) =E= muS ;
Equation CS7 matches x5;
   CS7.. S7*(x5 - 0) =E= muS ;
Equation CS8 matches x6;
   CS8.. S8*(x6 - 0) =E= muS ;

* set non default bounds

x7.lo = 0.2;x7.up = 1;
x8.lo = 0.2;x8.up = 1;
x9.lo = 0.2;x9.up = 1;
x10.lo = 0.2;x10.up = 1;
x11.lo = 0.2;x11.up = 1;

* touch all variables

x1.l = 0;
x2.l = 6.2;
x3.l = 149.1522;
x4.l = 0.8245;
x5.l = 1.29;
x6.l = 14.588;
x7.l = 0.2;
x8.l = 0.2;
x9.l = 0.2;
x10.l = 0.2;
x11.l = 0.2;
x12.l = 0;

S = -((18.67 - 2.166*x2.l + 5.415*x4.l)/(1 + exp(-(1.21373953149654*x7.l*(
   12.844 - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*
   x10.l*(0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861
   *x11.l*(4.285714 - x6.l)))) - 1.21373953149654*exp(-(1.21373953149654*x7.l*(
   12.844 - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*
   x10.l*(0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861
   *x11.l*(4.285714 - x6.l)))*x7.l/sqr(1 + exp(-(1.21373953149654*x7.l*(12.844
    - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(
   0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*
   (4.285714 - x6.l))))*((-5 + x2.l - 5*x4.l)*(13.255 - 1.083*x2.l) - (188 + 62
   *x4.l)*(1.2 - 0.000928*x3.l) + x3.l)) + 1.083*x12.l;
S4.L = max(SLO,S);
S = -((1.174464 + 0.057536*x4.l)/(1 + exp(-(1.21373953149654*x7.l*(12.844 - 
   x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(0.75
    - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*(
   4.285714 - x6.l)))) - 0.0740740740740741*exp(-(1.21373953149654*x7.l*(12.844
    - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(
   0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*
   (4.285714 - x6.l)))*x8.l/sqr(1 + exp(-(1.21373953149654*x7.l*(12.844 - x2.l)
    + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(0.75 - 
   x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*(
   4.285714 - x6.l))))*((-5 + x2.l - 5*x4.l)*(13.255 - 1.083*x2.l) - (188 + 62*
   x4.l)*(1.2 - 0.000928*x3.l) + x3.l)) - 0.005690496*x12.l;
S5.L = max(SLO,S);
S = -((-140.675 + 5.415*x2.l + 0.057536*x3.l)/(1 + exp(-(1.21373953149654*x7.l*
   (12.844 - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*
   x10.l*(0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861
   *x11.l*(4.285714 - x6.l)))) + 12.9098889749548*exp(-(1.21373953149654*x7.l*(
   12.844 - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*
   x10.l*(0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861
   *x11.l*(4.285714 - x6.l)))*x9.l/sqr(1 + exp(-(1.21373953149654*x7.l*(12.844
    - x2.l) + 0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(
   0.75 - x5.l) - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*
   (4.285714 - x6.l))))*((-5 + x2.l - 5*x4.l)*(13.255 - 1.083*x2.l) - (188 + 62
   *x4.l)*(1.2 - 0.000928*x3.l) + x3.l));
S6.L = max(SLO,S);
S = -14.9071285888912*exp(-(1.21373953149654*x7.l*(12.844 - x2.l) + 
   0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(0.75 - x5.l)
    - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*(4.285714 - 
   x6.l)))*x10.l/sqr(1 + exp(-(1.21373953149654*x7.l*(12.844 - x2.l) + 
   0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(0.75 - x5.l)
    - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*(4.285714 - 
   x6.l))))*((-5 + x2.l - 5*x4.l)*(13.255 - 1.083*x2.l) - (188 + 62*x4.l)*(1.2
    - 0.000928*x3.l) + x3.l);
S7.L = max(SLO,S);
S = -0.782623871749861*exp(-(1.21373953149654*x7.l*(12.844 - x2.l) + 
   0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(0.75 - x5.l)
    - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*(4.285714 - 
   x6.l)))*x11.l/sqr(1 + exp(-(1.21373953149654*x7.l*(12.844 - x2.l) + 
   0.0740740740740741*x8.l*(258 - x3.l) - 14.9071285888912*x10.l*(0.75 - x5.l)
    - 12.9098889749548*x9.l*(0.2 - x4.l) - 0.782623871749861*x11.l*(4.285714 - 
   x6.l))))*((-5 + x2.l - 5*x4.l)*(13.255 - 1.083*x2.l) - (188 + 62*x4.l)*(1.2
    - 0.000928*x3.l) + x3.l);
S8.L = max(SLO,S);

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

m.optfile    = 0;

option DNLP=CONOPT;

muS = 0;
muD = 0;

Solve m using DNLP maximizing x1;
